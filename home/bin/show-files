#!/usr/bin/env python3
import os
import fnmatch
import argparse

def load_gitignore_patterns(directory):
    gitignore_path = os.path.join(directory, '.gitignore')
    # Some common things we can safely ignore
    patterns = [
        '.git', '.gitignore',
        '*.lock', 
        '.vscode'
    ] 
    if os.path.exists(gitignore_path):
        with open(gitignore_path, 'r') as gitignore_file:
            for line in gitignore_file:
                line = line.strip()
                if line and not line.startswith('#'):
                    patterns.append(line)
    return patterns

def should_ignore(path, patterns):
    for pattern in patterns:
        if fnmatch.fnmatch(path, pattern) or fnmatch.fnmatch(os.path.basename(path), pattern):
            return True
    return False

def walk_directory(directory, patterns):
    for root, dirs, files in os.walk(directory):
        # Filter out ignored directories
        dirs[:] = [d for d in dirs if not should_ignore(os.path.join(root, d), patterns)]
        
        for file in files:
            file_path = os.path.join(root, file)
            if not should_ignore(file_path, patterns):
                print(f"File: {file}\nPath: {file_path}\n")
                print("Contents:")
                try:
                    with open(file_path, 'r') as f:
                        contents = f.read()
                        print(contents)
                except Exception as e:
                    print(f"Error reading file: {e}")
                print("\n" + "-"*40 + "\n")

def main():
    parser = argparse.ArgumentParser(description="Recursively print files and their contents.")
    parser.add_argument(
        "--ignore", 
        action="append", 
        default=[], 
        help="Ignore files or directories matching the pattern. Can be passed multiple times."
    )
    args = parser.parse_args()

    directory = '.'
    gitignore_patterns = load_gitignore_patterns(directory)
    
    # Add user-specified patterns to gitignore patterns
    all_patterns = gitignore_patterns + args.ignore

    # Run the walker
    walk_directory(directory, all_patterns)

if __name__ == "__main__":
    main()